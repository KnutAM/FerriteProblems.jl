name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: ['1.8', '1']
        os: ['ubuntu-latest']
        include:
          - os: windows-latest
            version: '1'
            arch: x64
          - os: macOS-latest
            version: '1'
            arch: x64
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      # - uses: julia-actions/julia-buildpkg@v1   # Replaced the following
      - run: |
          julia --color=yes --project=. -e '
            using Pkg
            packages = [
              PackageSpec(;url="https://github.com/KnutAM/FESolvers.jl.git"),
              PackageSpec(;url="https://github.com/KnutAM/FerriteAssembly.jl.git", rev="kam/rework"),
              PackageSpec(;url="https://github.com/KnutAM/MaterialModelsBase.jl.git"),
              ]
            Pkg.add(packages)
            Pkg.instantiate()'
        shell: bash
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      # - uses: julia-actions/julia-buildpkg@v1   # Replaced the following
      - run: |
          julia --color=yes --project=docs -e '
            using Pkg
            packages = [
              PackageSpec(;url="https://github.com/KnutAM/FESolvers.jl.git"),
              PackageSpec(;url="https://github.com/KnutAM/FerriteAssembly.jl.git", rev="kam/rework"),
              PackageSpec(;url="https://github.com/KnutAM/MaterialModelsBase.jl.git"),
              PackageSpec(path=pwd())
              ]
            Pkg.develop(packages)
            Pkg.instantiate()'
        shell: bash
      - uses: julia-actions/julia-docdeploy@v1
        with:
          install-package: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using FerriteProblems
            DocMeta.setdocmeta!(FerriteProblems, :DocTestSetup, :(using FerriteProblems); recursive=true)
            doctest(FerriteProblems)'
